FROM postgres:13

# Switch to root for installations
USER root

# Install system dependencies
RUN apt-get update && \
    apt-get install -y \
    wget \
    ca-certificates \
    python3 \
    python3-pip \
    python3-setuptools \
    python3-wheel \
    build-essential \
    libpq-dev \
    python3-dev && \
    rm -rf /var/lib/apt/lists/*

# Diagnostic and installation steps
RUN python3 -c "import sys; print('Python executable:', sys.executable)" && \
    python3 -m pip --version

# Install dependencies in stages with verbose output
RUN python3 -m pip install --break-system-packages --no-cache-dir psycopg2-binary
RUN python3 -m pip install --break-system-packages --no-cache-dir grpcio
RUN python3 -m pip install --break-system-packages --no-cache-dir \
    opentelemetry-api \
    opentelemetry-sdk \
    opentelemetry-exporter-otlp-proto-grpc

RUN python3 -m pip install --break-system-packages --no-cache-dir \
    opentelemetry-instrumentation-sqlalchemy \
    opentelemetry-instrumentation-psycopg2

# Create directory for scripts
RUN mkdir -p /usr/local/bin

# Copy instrumentation scripts
COPY postgresql-tracing.py /usr/local/bin/postgresql-tracing.py
COPY enhanced-entrypoint.sh /usr/local/bin/enhanced-entrypoint.sh

# Set executable permissions
RUN chmod +x /usr/local/bin/postgresql-tracing.py \
    /usr/local/bin/enhanced-entrypoint.sh

# Set Python path to ensure module discovery
ENV PYTHONPATH=/usr/local/lib/python3.11/site-packages:/usr/lib/python3/dist-packages

# Switch back to postgres user
USER postgres

# Use the enhanced entrypoint
ENTRYPOINT ["/usr/local/bin/enhanced-entrypoint.sh"]
